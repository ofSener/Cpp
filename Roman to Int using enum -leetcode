class Solution {
public:
    int romanToInt(std::string s) {
        enum RomanNumeral {
            I = 1,
            V = 5,
            X = 10,
            L = 50,
            C = 100,
            D = 500,
            M = 1000
        };
        int total = 0;
        RomanNumeral prev = M;
        for (char& c : s) {
            RomanNumeral current;
            switch (c) {
                case 'I':
                    current = I;
                    break;
                case 'V':
                    current = V;
                    break;
                case 'X':
                    current = X;
                    break;
                case 'L':
                    current = L;
                    break;
                case 'C':
                    current = C;
                    break;
                case 'D':
                    current = D;
                    break;
                case 'M':
                    current = M;
                    break;
                default:
                    return -1; // invalid input
            }
            total += current;
            if (current > prev) {
                total -= 2 * prev; // subtract twice the previous value
            }
            prev = current;
        }
        return total;
    }
};
